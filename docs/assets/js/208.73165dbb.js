(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{446:function(e,r,n){"use strict";n.r(r);var s=n(36),t=function(e){e.options.__data__block__={mermaid_382ee14e:"graph TB\n\n    %% Nodes\n\n    teams(Microsoft Teams client<br>Desktop, web, mobile)\n    apps(3rd-party apps<br>Custom, Power Automate)\n    webnlb(SSL, Web Proxy / NLB / Firewall<br>Azure Front Door)\n    subgraph webtier[Web pool]\n        web1(Web #1<br>Azure Container)\n        web2(Web #2<br>Azure Container)\n    end\n    subgraph apitier[Api pool]\n        api1(Api #1<br>Azure Container)\n        api2(Api #2<br>Azure Container)\n    end\n    subgraph jobstier[Jobs pool]\n        scheduler(Scheduler<br>Azure Container)\n        jobs1(Job #1<br>Azure Container)\n        jobs2(Job #2<br>Azure Container)\n    end\n    subgraph ectier[Events pool]\n        ec1(Event Collector #1<br>Azure Container)\n        ec2(Event Collector #2<br>Azure Container)\n    end\n    backingservicesnlb(NLB<br>Azure NLB)\n    subgraph backingservices[ ]\n        redis[(Cache and jobs queuing<br>Azure Cache for Redis)]\n        postgresmain[(Configuration database<br>Azure Database for PostgreSQL)]\n        postgresevents[(Audit database<br>Azure Database for PostgreSQL)]\n        azurestorage[(Blob storage<br>Azure Storage)]\n        cosmosdb[(NoSQL database<br>Azure Cosmos DB)]\n    end\n    \n    %% Links\n\n    teams --\x3e|OAuth/AD| webnlb\n    apps --\x3e|OAuth/AD| webnlb\n\n    backingservicesnlb --\x3e redis \n    backingservicesnlb --\x3e postgresmain \n    backingservicesnlb --\x3e ec1\n    backingservicesnlb --\x3e ec2\n    ec1 --\x3e postgresevents\n    ec2 --\x3e postgresevents\n    backingservicesnlb --\x3e azurestorage\n    backingservicesnlb --\x3e cosmosdb\n\n    web1 --\x3e backingservicesnlb\n    web2 --\x3e backingservicesnlb\n\n    api1 --\x3e backingservicesnlb\n    api2 --\x3e backingservicesnlb\n\n    webnlb --\x3e web1\n    webnlb --\x3e web2\n    webnlb --\x3e api1\n    webnlb --\x3e api2\n\n    jobs1 --\x3e backingservicesnlb\n    jobs2 --\x3e backingservicesnlb\n\n    scheduler --\x3e backingservicesnlb\n    scheduler --\x3e|schedule| jobs1\n    scheduler --\x3e|schedule| jobs2\n\n    %% Styles\n\n    classDef external fill:#9099d8, stroke-width:0px;\n        class teams external\n        class apps external\n    classDef network fill:#90EE90, stroke-width:0px;\n        class net network\n        class backingservicesnlb network\n        class apinlb network\n        class webnlb network\n    classDef containers fill:#ADD8E6, stroke-width:0px;\n        class web1 containers\n        class web2 containers\n        class api1 containers\n        class api2 containers\n        class jobs1 containers\n        class jobs2 containers\n        class scheduler containers\n        class ec1 containers\n        class ec2 containers\n    classDef azureservices fill:#FFFFE0, stroke:#000000, stroke-width:1px;\n        class redis azureservices\n        class postgresmain azureservices\n        class postgresevents azureservices\n        class azurestorage azureservices\n        class cosmosdb azureservices\n",mermaid_382ee167:"graph TB\n    ext(Client)\n    net(Network component)\n    cont(OCI / Docker container)\n    az(Managed Azure service)\n\n    classDef external fill:#9099d8, stroke-width:0px;\n        class ext external\n    classDef network fill:#90EE90, stroke-width:0px;\n        class net network\n    classDef containers fill:#ADD8E6, stroke-width:0px;\n        class cont containers\n    classDef azureservices fill:#FFFFE0, stroke-width:0px;\n        class az azureservices\n",mermaid_382ee1c1:"graph BT\n\n    %% Nodes\n\n    subgraph backingservices[ ]\n        redis(Cache and jobs queuing<br>Azure Cache for Redis)\n        postgresmain(Configuration database<br>Azure Database for PostgreSQL)\n        postgresevents(Audit database<br>Azure Database for PostgreSQL)\n    end\n\n    uptime(Uptime monitoring<br>Monika)\n\n    apptiers(Web, Api and Jobs pools<br>Azure Container)\n\n    redis(Cache and jobs queuing<br>Azure Cache for Redis)\n    redisexporter(Redis exporter<br>Azure Container)\n\n    bullexporter(Bull exporter<br>Azure Container)\n\n    pgexporter(PostgreSQL exporter<br>Azure Container)\n\n    metrics(Metrics collector<br>Prometheus on Azure Container)\n    metricsdashboard(Metrics Dashboard<br>Grafana on Azure Container)\n    apmdashboard(APM Dashboard<br>Azure Application Insights)\n\n    %% Links\n    metrics --\x3e metricsdashboard\n\n    uptime --\x3e apptiers\n    uptime --\x3e metrics\n\n    apptiers --\x3e metrics\n    apptiers --\x3e apmdashboard\n\n    redis --\x3e redisexporter\n    redis --\x3e bullexporter\n    redisexporter --\x3e metrics\n    bullexporter --\x3e metrics\n\n    postgresmain --\x3e pgexporter\n    postgresevents --\x3e pgexporter\n    pgexporter --\x3e metrics\n\n\n    %% Styles\n\n    classDef containers fill:#ADD8E6, stroke-width:0px;\n        class apptiers containers\n        class redisexporter containers\n        class bullexporter containers\n        class pgexporter containers\n        class uptime containers\n        class metrics containers\n        class metricsdashboard containers\n    classDef azureservices fill:#FFFFE0, stroke-width:0px;\n        class apmdashboard azureservices\n        class appinsights azureservices\n        class redis azureservices\n        class postgresmain azureservices\n        class postgresevents azureservices\n"}},a=Object(s.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"architecture"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[e._v("#")]),e._v(" Architecture")]),e._v(" "),n("p",[e._v("nBold is a multi-tier platform that relies on "),n("RouterLink",{attrs:{to:"/hosting/references/services-reference.html"}},[e._v("independent services")]),e._v(" to support high-availability and scale with ease.")],1),e._v(" "),n("p",[n("strong",[e._v("TABLE OF CONTENTS")])]),e._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#core-components"}},[e._v("Core components")])]),n("li",[n("a",{attrs:{href:"#monitoring-components"}},[e._v("Monitoring components")])]),n("li",[n("a",{attrs:{href:"#design-principles"}},[e._v("Design Principles")]),n("ul",[n("li",[n("a",{attrs:{href:"#security-first"}},[e._v("Security first")])]),n("li",[n("a",{attrs:{href:"#infrastructure-as-code"}},[e._v("Infrastructure as code")])]),n("li",[n("a",{attrs:{href:"#self-contained"}},[e._v("Self-contained")])]),n("li",[n("a",{attrs:{href:"#scalability"}},[e._v("Scalability")])]),n("li",[n("a",{attrs:{href:"#resiliency"}},[e._v("Resiliency")])]),n("li",[n("a",{attrs:{href:"#we-don-t-trust-external-services"}},[e._v("We don't trust external services")])])])])])]),n("p"),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"core-components"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#core-components"}},[e._v("#")]),e._v(" Core components")]),e._v(" "),n("p",[e._v("At a glance, a basic and minimal nBold production environment (without operations/monitoring tools) would be comprised of these different elements:")]),e._v(" "),n("Mermaid",{attrs:{id:"mermaid_382ee14e",graph:e.$dataBlock.mermaid_382ee14e}}),n("p",[n("strong",[e._v("Legend:")])]),e._v(" "),n("Mermaid",{attrs:{id:"mermaid_382ee167",graph:e.$dataBlock.mermaid_382ee167}}),n("p",[e._v("Notes:")]),e._v(" "),n("ul",[n("li",[e._v("Azure containers could be hosted on either "),n("code",[e._v("Azure App Service")]),e._v(" or "),n("code",[e._v("Azure Container Instances")])]),e._v(" "),n("li",[e._v("Deployment could be executed manually, using our Terraform "),n("RouterLink",{attrs:{to:"/hosting/installation/azure-deployment.html"}},[e._v("deployment project templates")]),e._v(" for Azure, or using any orchestrator such as "),n("a",{attrs:{href:"https://azure.microsoft.com/en-us/services/kubernetes-service/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Kubernetes Service (AKS)"),n("OutboundLink")],1),e._v(".")],1),e._v(" "),n("li",[e._v("A complete list of components is available in our "),n("RouterLink",{attrs:{to:"/hosting/references/azure-resources-reference.html"}},[e._v("Azure deployment resources")]),e._v(" documentation.")],1)]),e._v(" "),n("h2",{attrs:{id:"monitoring-components"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#monitoring-components"}},[e._v("#")]),e._v(" Monitoring components")]),e._v(" "),n("p",[e._v("In addition to the previous architecture diagram, here we're presenting the most common additional operations services, for auditing, uptime monitoring and APM (Application Performance Management):")]),e._v(" "),n("Mermaid",{attrs:{id:"mermaid_382ee1c1",graph:e.$dataBlock.mermaid_382ee1c1}}),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),n("p",[e._v("Learn more out how to operate a nBold infrastructure using our operations manual, especially "),n("RouterLink",{attrs:{to:"/hosting/advanced/updating.html"}},[e._v("Updates management")]),e._v(" and "),n("RouterLink",{attrs:{to:"/hosting/advanced/monitoring.html"}},[e._v("monitoring")])],1)]),e._v(" "),n("h2",{attrs:{id:"design-principles"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#design-principles"}},[e._v("#")]),e._v(" Design Principles")]),e._v(" "),n("p",[e._v("Here are the key tenets that drived the design of this architecture.")]),e._v(" "),n("h3",{attrs:{id:"security-first"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#security-first"}},[e._v("#")]),e._v(" Security first")]),e._v(" "),n("p",[e._v("We're enforcing maximum security at each level by applying zero-trust, even if it implies to perform advanced and complex technical operations.")]),e._v(" "),n("h3",{attrs:{id:"infrastructure-as-code"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#infrastructure-as-code"}},[e._v("#")]),e._v(" Infrastructure as code")]),e._v(" "),n("p",[e._v("All our infrastructure resources are defined by code, using the Terraform "),n("a",{attrs:{href:"https://www.terraform.io/docs/language/syntax/configuration.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HCL"),n("OutboundLink")],1),e._v(" language from "),n("a",{attrs:{href:"https://www.hashicorp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("HashiCorp"),n("OutboundLink")],1),e._v(", resulting in a consistent, reliable and controlled deployment process.")]),e._v(" "),n("h3",{attrs:{id:"self-contained"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#self-contained"}},[e._v("#")]),e._v(" Self-contained")]),e._v(" "),n("p",[e._v("To guarantee data residency, the platform could be operated in a fully self-contained environment that doesn't rely on any external service. Technically, the solution could be executed in one single isolated Docker environment.")]),e._v(" "),n("h3",{attrs:{id:"scalability"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scalability"}},[e._v("#")]),e._v(" Scalability")]),e._v(" "),n("p",[e._v("As a multi-tier platform, each tier (web, api, jobs...) could scale horizontally independently by increasing the number of containers with the same role. In addition, this whole architecture could be replicated across multiple Azure regions to allocate and distribute the workload across multiple environments.")]),e._v(" "),n("h3",{attrs:{id:"resiliency"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resiliency"}},[e._v("#")]),e._v(" Resiliency")]),e._v(" "),n("p",[e._v("All the operations are processed through message queues that brings advanced logging and retry capabilities in case of failure (Throttling, networking issue, Microsoft Graph bugs or unavailability…).")]),e._v(" "),n("h3",{attrs:{id:"we-don-t-trust-external-services"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#we-don-t-trust-external-services"}},[e._v("#")]),e._v(" We don't trust external services")]),e._v(" "),n("p",[e._v("Based on our experience, our design strategy regarding the Microsoft Graph may be summarized in one sentence:​")]),e._v(" "),n("blockquote",[n("p",[e._v("We don’t trust blindly the Microsoft Graph!")])])],1)}),[],!1,null,null,null);"function"==typeof t&&t(a);r.default=a.exports}}]);